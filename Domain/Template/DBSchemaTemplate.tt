<#	
	string NAMESPACE = @"ChengDaApi.DBRepositories.DBSchema";
	string SOURCE = @"NB199\\SQLEXPRESS";
	string CATALOG = @"ChengeDaQuote";
	string ID = @"sa";
	string PASSWORD = @"1qaz2wsx";
	string TABLENAME = @"member1";

	string connectionString = string.Format("Data Source={0};Initial Catalog={1};Persist Security Info=False;User ID={2};Password={3}",SOURCE,CATALOG,ID,PASSWORD); 
#>
<#@ template language="C#" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.xml.dll" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace <#=NAMESPACE#>
{
	public class <#=TABLENAME#>
    {
	<#	
		SqlConnection conn = new SqlConnection(connectionString); 
		conn.Open(); 
		string SQL = string.Format("select * from [{0}]", TABLENAME); 
		SqlCommand cmd = new SqlCommand(SQL, conn);
		SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.KeyInfo);
		DataTable schemaTB = reader.GetSchemaTable();
		string fieldName = string.Empty;
		foreach (DataRow rowMeta in schemaTB.Rows)
		{
                string qMark = ((bool)rowMeta["AllowDBNull"] && !rowMeta["DataType"].ToString().ToUpper().Contains("STRING") ) ? "?" : "";
                List<string> attrList = new List<string>();
                if ((bool)rowMeta["IsKey"])
                    attrList.Add("Key");
                if (rowMeta["DataType"].ToString().ToUpper().Contains("STRING"))
                {
                    attrList.Add(string.Format(@"Column(TypeName=""{0}({1})"")", rowMeta["DataTypeName"].ToString(), rowMeta["ColumnSize"].ToString()));
                    attrList.Add(string.Format("MaxLength({0})", rowMeta["ColumnSize"].ToString()));
                	if(!(bool)rowMeta["AllowDBNull"] && !(bool)rowMeta["IsKey"])
					 attrList.Add("Required");
				}

                string attribute = attrList.Count> 0 ? string.Format("[{0}]",String.Join(",",attrList)) : "";
	#>
	<#=attribute#>
		public <#=rowMeta["DataType"].ToString().Replace("System.","")+qMark#> <#=rowMeta["ColumnName"].ToString()#>  { get; set; }
	<#	
		}
	#>
	
	}
}